/* C implementation QuickSort */
#include<stdio.h>
 
// A utility function to swap two elements
void swap(int* a, int* b)
{
    int t = *a;
    *a = *b;
    *b = t;
}

int partition (int arr[], int low, int high)
{
    int i=low+1,j=high,temp;
     while(i<=j)
     {
              if(arr[i]<arr[low])
              {
                               i++;
              }
              if(arr[j]>arr[low])
              {
                               j--;                
              }
              if(i<=j)
              {
                  swap (&arr[i], &arr[j]);
              }
      }

     swap (&arr[low], &arr[j]);
    return j;
}

void quickSort(int arr[], int low, int high)
{
       if (low < high)
    {        
       int pi = partition(arr, low, high);
        quickSort(arr, low, pi - 1);
         quickSort(arr, pi + 1, high);
      }

}
 
/* Function to print an array */
void printArray(int arr[],int start, int size)
{
    int i;
    for (i=start; i <= size; i++)
        printf("%d ", arr[i]);
    printf("\n");
}
 
// Driver program to test above functions
int main()
{
    int n;
    scanf("%d",&n);
int arr[n];  
  for(int i =0;i<n;i++)
        scanf("%d",&arr[i]);
    quickSort(arr, 0, n-1);
  printArray(arr,0,n-1);
    return 0;
}
